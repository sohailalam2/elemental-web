import{_ as s,c as n,o as e,a}from"./app.3f1c6235.js";const E=JSON.parse('{"title":"Component Registration","description":"","frontmatter":{},"headers":[],"relativePath":"elemental-component/1-registration.md"}'),t={name:"elemental-component/1-registration.md"},l=a(`<h1 id="component-registration" tabindex="-1">Component Registration <a class="header-anchor" href="#component-registration" aria-hidden="true">#</a></h1><h2 id="register-a-component" tabindex="-1">Register a Component <a class="header-anchor" href="#register-a-component" aria-hidden="true">#</a></h2><p>All custom elements MUST be registered before they can be instantiated, not doing so will result in an <code>ElementalComponentIsNotRegisteredException</code> exception.</p><div class="warning custom-block"><p class="custom-block-title">\u{1F47A} Register Your Component</p><p>Register your components before you use. Register them even if you only declare them in HTML pages.</p></div><blockquote><p>Read more about <a href="./component-registry/component-registration">component registration here</a>.</p></blockquote><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h3><h4 id="registering-with-default-prefix-el" tabindex="-1">Registering with default prefix <code>el</code> <a class="header-anchor" href="#registering-with-default-prefix-el" aria-hidden="true">#</a></h4><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#6A9955;">// Here ButtonCounter gets registered as \`el-button-counter\`</span></span>
<span class="line"><span style="color:#6A9955;">// and ready for use as &lt;el-button-counter&gt;&lt;/el-button-counter&gt;</span></span>
<span class="line"><span style="color:#9CDCFE;">ElementalComponent</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">register</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">ButtonCounter</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#357B42;">// Here ButtonCounter gets registered as \`el-button-counter\`</span></span>
<span class="line"><span style="color:#357B42;">// and ready for use as &lt;el-button-counter&gt;&lt;/el-button-counter&gt;</span></span>
<span class="line"><span style="color:#2F86D2;">ElementalComponent</span><span style="color:#002339;">.</span><span style="color:#7EB233;">register</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">ButtonCounter</span><span style="color:#002339;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="registering-with-custom-prefix" tabindex="-1">Registering with custom prefix <a class="header-anchor" href="#registering-with-custom-prefix" aria-hidden="true">#</a></h4><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#6A9955;">// Here ButtonCounter gets registered as \`awesome-button-counter\`</span></span>
<span class="line"><span style="color:#6A9955;">// and ready for use as &lt;awesome-button-counter&gt;&lt;/awesome-button-counter&gt;</span></span>
<span class="line"><span style="color:#9CDCFE;">ElementalComponent</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">register</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">ButtonCounter</span><span style="color:#E6E6E6;">, {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">prefix:</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">ElementalComponentPrefix</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">from</span><span style="color:#E6E6E6;">(</span><span style="color:#CE9178;">&#39;awesome&#39;</span><span style="color:#E6E6E6;">),</span></span>
<span class="line"><span style="color:#E6E6E6;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#357B42;">// Here ButtonCounter gets registered as \`awesome-button-counter\`</span></span>
<span class="line"><span style="color:#357B42;">// and ready for use as &lt;awesome-button-counter&gt;&lt;/awesome-button-counter&gt;</span></span>
<span class="line"><span style="color:#2F86D2;">ElementalComponent</span><span style="color:#002339;">.</span><span style="color:#7EB233;">register</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">ButtonCounter</span><span style="color:#002339;">, {</span></span>
<span class="line"><span style="color:#002339;">  prefix: </span><span style="color:#2F86D2;">ElementalComponentPrefix</span><span style="color:#002339;">.</span><span style="color:#7EB233;">from</span><span style="color:#002339;">(</span><span style="color:#A44185;">&#39;awesome&#39;</span><span style="color:#002339;">),</span></span>
<span class="line"><span style="color:#002339;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="configure-a-default-custom-prefix" tabindex="-1">Configure a default custom prefix <a class="header-anchor" href="#configure-a-default-custom-prefix" aria-hidden="true">#</a></h4><p>By default, ElementalComponent uses <code>el</code> as the default prefix. You can optionally change this to your liking as shows below. Once the default prefix is changed, any further components being registered will use the new default prefix without you having to explicitly pass it during the registration process.</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#9CDCFE;">ElementalComponentRegistry</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">setDefaultPrefix</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">ElementalComponentPrefix</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">from</span><span style="color:#E6E6E6;">(</span><span style="color:#CE9178;">&#39;my&#39;</span><span style="color:#E6E6E6;">));</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#2F86D2;">ElementalComponentRegistry</span><span style="color:#002339;">.</span><span style="color:#7EB233;">setDefaultPrefix</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">ElementalComponentPrefix</span><span style="color:#002339;">.</span><span style="color:#7EB233;">from</span><span style="color:#002339;">(</span><span style="color:#A44185;">&#39;my&#39;</span><span style="color:#002339;">));</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="template-registration" tabindex="-1">Template Registration <a class="header-anchor" href="#template-registration" aria-hidden="true">#</a></h2><blockquote><p>Read more about <a href="./component-registry/template-registration">template registration here</a>.</p></blockquote><h3 id="usage-1" tabindex="-1">Usage <a class="header-anchor" href="#usage-1" aria-hidden="true">#</a></h3><h4 id="registering-with-default-prefix-el-1" tabindex="-1">Registering with default prefix <code>el</code> <a class="header-anchor" href="#registering-with-default-prefix-el-1" aria-hidden="true">#</a></h4><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#6A9955;">// Here the given template string gets registered as a \`ButtonCounter\`</span></span>
<span class="line"><span style="color:#6A9955;">// template with an id \`el-button-counter\`. You can see that in the beginning</span></span>
<span class="line"><span style="color:#6A9955;">// of the document body as \`&lt;template id=&quot;el-button-counter&quot;&gt;...&lt;/template&gt;\`</span></span>
<span class="line"><span style="color:#9CDCFE;">ElementalComponent</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">register</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">ButtonCounter</span><span style="color:#E6E6E6;">, {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">template:</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">\`&lt;button&gt;Click Me&lt;/button&gt;\`</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#357B42;">// Here the given template string gets registered as a \`ButtonCounter\`</span></span>
<span class="line"><span style="color:#357B42;">// template with an id \`el-button-counter\`. You can see that in the beginning</span></span>
<span class="line"><span style="color:#357B42;">// of the document body as \`&lt;template id=&quot;el-button-counter&quot;&gt;...&lt;/template&gt;\`</span></span>
<span class="line"><span style="color:#2F86D2;">ElementalComponent</span><span style="color:#002339;">.</span><span style="color:#7EB233;">register</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">ButtonCounter</span><span style="color:#002339;">, {</span></span>
<span class="line"><span style="color:#002339;">  template: </span><span style="color:#A44185;">\`&lt;button&gt;Click Me&lt;/button&gt;\`</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="registering-with-custom-prefix-1" tabindex="-1">Registering with custom prefix <a class="header-anchor" href="#registering-with-custom-prefix-1" aria-hidden="true">#</a></h4><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#6A9955;">// Here the given template string gets registered as a \`ButtonCounter\`</span></span>
<span class="line"><span style="color:#6A9955;">// template with an id \`awesome-button-counter\`.</span></span>
<span class="line"><span style="color:#6A9955;">// You can see that in the beginning of the document body as</span></span>
<span class="line"><span style="color:#6A9955;">// \`&lt;template id=&quot;awesome-button-counter&quot;&gt;...&lt;/template&gt;\`</span></span>
<span class="line"><span style="color:#9CDCFE;">ElementalComponent</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">register</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">ButtonCounter</span><span style="color:#E6E6E6;">, {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">template:</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">\`&lt;button&gt;Click Me&lt;/button&gt;\`</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">prefix:</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">ElementalComponentPrefix</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">from</span><span style="color:#E6E6E6;">(</span><span style="color:#CE9178;">&#39;awesome&#39;</span><span style="color:#E6E6E6;">),</span></span>
<span class="line"><span style="color:#E6E6E6;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#357B42;">// Here the given template string gets registered as a \`ButtonCounter\`</span></span>
<span class="line"><span style="color:#357B42;">// template with an id \`awesome-button-counter\`.</span></span>
<span class="line"><span style="color:#357B42;">// You can see that in the beginning of the document body as</span></span>
<span class="line"><span style="color:#357B42;">// \`&lt;template id=&quot;awesome-button-counter&quot;&gt;...&lt;/template&gt;\`</span></span>
<span class="line"><span style="color:#2F86D2;">ElementalComponent</span><span style="color:#002339;">.</span><span style="color:#7EB233;">register</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">ButtonCounter</span><span style="color:#002339;">, {</span></span>
<span class="line"><span style="color:#002339;">  template: </span><span style="color:#A44185;">\`&lt;button&gt;Click Me&lt;/button&gt;\`</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">  prefix: </span><span style="color:#2F86D2;">ElementalComponentPrefix</span><span style="color:#002339;">.</span><span style="color:#7EB233;">from</span><span style="color:#002339;">(</span><span style="color:#A44185;">&#39;awesome&#39;</span><span style="color:#002339;">),</span></span>
<span class="line"><span style="color:#002339;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">\u{1F481} <code>this.$template</code></p><p>If a template is registered or is autodetected by <code>ElementalComponent</code> during the component instantiation, then its content will be made available via the readonly instance property <code>$template</code>.</p></div><h4 id="link-a-different-template" tabindex="-1">Link a different template <a class="header-anchor" href="#link-a-different-template" aria-hidden="true">#</a></h4><p>Let&#39;s say we already have a template registered in the DOM with an id of <code>custom-template</code>. If we choose to create an element that uses this existing template instead of creating (or registering) a new template, then we can simply pass the <code>templateId</code> during the instantiation of the component and at runtime, the component will use the given template.</p><p>If no such template is found, an <code>ElementalComponentNoSuchTemplateFoundException</code> will be thrown.</p><div class="warning custom-block"><p class="custom-block-title">It&#39;s a reference not a copy</p><p>If a <code>templateId</code> is provided and a template with such an id already exists, then the component will try to directly use the content of the given template instead of copying and creating its own template first.</p></div><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#9CDCFE;">ElementalComponent</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">register</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">ButtonCounter</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">myButton</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">new</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">ButtonCounter</span><span style="color:#E6E6E6;">({</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">templateId:</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">\`some-template-id\`</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#2F86D2;">ElementalComponent</span><span style="color:#002339;">.</span><span style="color:#7EB233;">register</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">ButtonCounter</span><span style="color:#002339;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0991B6;">const</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">myButton</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">new</span><span style="color:#002339;"> </span><span style="color:#7EB233;">ButtonCounter</span><span style="color:#002339;">({</span></span>
<span class="line"><span style="color:#002339;">  templateId: </span><span style="color:#A44185;">\`some-template-id\`</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>The templateId can also be passed during the registration process to use that as the template, but in that case the template will be copied into a new template with the id that of the element&#39;s tagName.</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#9CDCFE;">ElementalComponent</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">register</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">ButtonCounter</span><span style="color:#E6E6E6;">, {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">templateId:</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">\`some-template-id\`</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#2F86D2;">ElementalComponent</span><span style="color:#002339;">.</span><span style="color:#7EB233;">register</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">ButtonCounter</span><span style="color:#002339;">, {</span></span>
<span class="line"><span style="color:#002339;">  templateId: </span><span style="color:#A44185;">\`some-template-id\`</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,28),o=[l];function p(r,c,i,d,u,y){return e(),n("div",null,o)}const g=s(t,[["render",p]]);export{E as __pageData,g as default};
