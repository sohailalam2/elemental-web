import{_ as s,c as n,o as a,a as p}from"./app.dde0197f.js";const d=JSON.parse('{"title":"Component Attributes","description":"","frontmatter":{},"headers":[],"relativePath":"elemental-component/3-attributes.md"}'),l={name:"elemental-component/3-attributes.md"},e=p(`<h1 id="component-attributes" tabindex="-1">Component Attributes <a class="header-anchor" href="#component-attributes" aria-hidden="true">#</a></h1><h2 id="attributes-and-properties" tabindex="-1">Attributes and Properties <a class="header-anchor" href="#attributes-and-properties" aria-hidden="true">#</a></h2><p>When a new attribute is added to the component, ElementalComponent automatically exposes the attribute as a class property and if that attribute is made observable, then the attribute and property will be kept in sync.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h3><p>In the following example, note that there are three attributes used in the HTML code. <code>id</code>, <code>name</code>, and <code>superpower</code>. Only <code>superpower</code> attribute is made an observable.</p><p>When the <code>superpower</code> attribute change is detected, the corresponding class property <code>this.superpower</code> also gets updated.</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#6A9955;">&lt;!-- somewhere in index.html --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">el-hero</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">id</span><span style="color:#E6E6E6;">=</span><span style="color:#CE9178;">&quot;one&quot;</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">name</span><span style="color:#E6E6E6;">=</span><span style="color:#CE9178;">&quot;Superman&quot;</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">superpower</span><span style="color:#E6E6E6;">=</span><span style="color:#CE9178;">&quot;Laser Eyes&quot;</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">el-hero</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#357B42;">&lt;!-- somewhere in index.html --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0071CE;">&lt;</span><span style="color:#0444AC;">el-hero</span><span style="color:#0071CE;"> </span><span style="color:#DF8618;">id</span><span style="color:#0071CE;">=</span><span style="color:#A44185;">&quot;one&quot;</span><span style="color:#0071CE;"> </span><span style="color:#DF8618;">name</span><span style="color:#0071CE;">=</span><span style="color:#A44185;">&quot;Superman&quot;</span><span style="color:#0071CE;"> </span><span style="color:#DF8618;">superpower</span><span style="color:#0071CE;">=</span><span style="color:#A44185;">&quot;Laser Eyes&quot;</span><span style="color:#0071CE;">&gt;&lt;/</span><span style="color:#0444AC;">el-hero</span><span style="color:#0071CE;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#569CD6;">class</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">Hero</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">extends</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ElementalComponent</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#6A9955;">// IMPORTANT!</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#6A9955;">// This is the way to make attributes observable</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">static</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">get</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">observedAttributes</span><span style="color:#E6E6E6;">() {</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#C586C0;">return</span><span style="color:#E6E6E6;"> [</span><span style="color:#CE9178;">&#39;superpower&#39;</span><span style="color:#E6E6E6;">];</span></span>
<span class="line"><span style="color:#E6E6E6;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">private</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">name</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;Unknown&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">private</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">superpower</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;Unknown&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">protected</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">render</span><span style="color:#E6E6E6;">() {</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#569CD6;">this</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">$root</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">innerHTML</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">\`</span></span>
<span class="line"><span style="color:#CE9178;">        &lt;p&gt;I am </span><span style="color:#569CD6;">\${</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> and I have </span><span style="color:#569CD6;">\${</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">superpower</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&lt;/p&gt;</span></span>
<span class="line"><span style="color:#CE9178;">    \`</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#E6E6E6;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">protected</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">connectedCallback</span><span style="color:#E6E6E6;">() {</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#569CD6;">super</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">connectedCallback</span><span style="color:#E6E6E6;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#DCDCAA;">setTimeout</span><span style="color:#E6E6E6;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">      </span><span style="color:#6A9955;">// IMPORTANT!</span></span>
<span class="line"><span style="color:#E6E6E6;">      </span><span style="color:#6A9955;">// The only way how an attribute change is fired,</span></span>
<span class="line"><span style="color:#E6E6E6;">      </span><span style="color:#6A9955;">// is when we call the setAttribute method</span></span>
<span class="line"><span style="color:#E6E6E6;">      </span><span style="color:#569CD6;">this</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">setAttribute</span><span style="color:#E6E6E6;">(</span><span style="color:#CE9178;">&#39;superpower&#39;</span><span style="color:#E6E6E6;">, </span><span style="color:#CE9178;">&#39;XRay Vision&#39;</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">      </span><span style="color:#6A9955;">// NWRONG WAY!!</span></span>
<span class="line"><span style="color:#E6E6E6;">      </span><span style="color:#6A9955;">// This will NOT fire a change event hence the DOM will</span></span>
<span class="line"><span style="color:#E6E6E6;">      </span><span style="color:#6A9955;">// not be refreshed and the attribute will not be in</span></span>
<span class="line"><span style="color:#E6E6E6;">      </span><span style="color:#6A9955;">// sync with the property value</span></span>
<span class="line"><span style="color:#E6E6E6;">      </span><span style="color:#569CD6;">this</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">superpower</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;Super Hearing&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#E6E6E6;">    }, </span><span style="color:#B5CEA8;">2000</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"><span style="color:#E6E6E6;">  }</span></span>
<span class="line"><span style="color:#E6E6E6;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#0991B6;">class</span><span style="color:#002339;"> </span><span style="color:#0444AC;">Hero</span><span style="color:#002339;"> </span><span style="color:#DA5221;">extends</span><span style="color:#002339;"> </span><span style="color:#B02767;">ElementalComponent</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#357B42;">// IMPORTANT!</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#357B42;">// This is the way to make attributes observable</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">static</span><span style="color:#002339;"> </span><span style="color:#0991B6;">get</span><span style="color:#002339;"> </span><span style="color:#7EB233;">observedAttributes</span><span style="color:#002339;">() {</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#7B30D0;">return</span><span style="color:#002339;"> [</span><span style="color:#A44185;">&#39;superpower&#39;</span><span style="color:#002339;">];</span></span>
<span class="line"><span style="color:#002339;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">private</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">name</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;Unknown&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">private</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">superpower</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;Unknown&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">protected</span><span style="color:#002339;"> </span><span style="color:#7EB233;">render</span><span style="color:#002339;">() {</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#000000;">this</span><span style="color:#002339;">.</span><span style="color:#2F86D2;">$root</span><span style="color:#002339;">.</span><span style="color:#2F86D2;">innerHTML</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#A44185;">\`</span></span>
<span class="line"><span style="color:#A44185;">        &lt;p&gt;I am \${</span><span style="color:#000000;">this</span><span style="color:#A44185;">.</span><span style="color:#2F86D2;">name</span><span style="color:#A44185;">} and I have \${</span><span style="color:#000000;">this</span><span style="color:#A44185;">.</span><span style="color:#2F86D2;">superpower</span><span style="color:#A44185;">}&lt;/p&gt;</span></span>
<span class="line"><span style="color:#A44185;">    \`</span><span style="color:#002339;">;</span></span>
<span class="line"><span style="color:#002339;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">protected</span><span style="color:#002339;"> </span><span style="color:#7EB233;">connectedCallback</span><span style="color:#002339;">() {</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#2F86D2;">super</span><span style="color:#002339;">.</span><span style="color:#7EB233;">connectedCallback</span><span style="color:#002339;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#7EB233;">setTimeout</span><span style="color:#002339;">(() </span><span style="color:#0991B6;">=&gt;</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">      </span><span style="color:#357B42;">// IMPORTANT!</span></span>
<span class="line"><span style="color:#002339;">      </span><span style="color:#357B42;">// The only way how an attribute change is fired,</span></span>
<span class="line"><span style="color:#002339;">      </span><span style="color:#357B42;">// is when we call the setAttribute method</span></span>
<span class="line"><span style="color:#002339;">      </span><span style="color:#000000;">this</span><span style="color:#002339;">.</span><span style="color:#7EB233;">setAttribute</span><span style="color:#002339;">(</span><span style="color:#A44185;">&#39;superpower&#39;</span><span style="color:#002339;">, </span><span style="color:#A44185;">&#39;XRay Vision&#39;</span><span style="color:#002339;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">      </span><span style="color:#357B42;">// NWRONG WAY!!</span></span>
<span class="line"><span style="color:#002339;">      </span><span style="color:#357B42;">// This will NOT fire a change event hence the DOM will</span></span>
<span class="line"><span style="color:#002339;">      </span><span style="color:#357B42;">// not be refreshed and the attribute will not be in</span></span>
<span class="line"><span style="color:#002339;">      </span><span style="color:#357B42;">// sync with the property value</span></span>
<span class="line"><span style="color:#002339;">      </span><span style="color:#000000;">this</span><span style="color:#002339;">.</span><span style="color:#2F86D2;">superpower</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;Super Hearing&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"><span style="color:#002339;">    }, </span><span style="color:#174781;">2000</span><span style="color:#002339;">);</span></span>
<span class="line"><span style="color:#002339;">  }</span></span>
<span class="line"><span style="color:#002339;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div>`,8),o=[e];function t(r,c,y,i,E,b){return a(),n("div",null,o)}const h=s(l,[["render",t]]);export{d as __pageData,h as default};
