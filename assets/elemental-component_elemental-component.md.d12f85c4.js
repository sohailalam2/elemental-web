import{_ as s,c as n,o as a,a as l}from"./app.84e59d72.js";const D=JSON.parse('{"title":"Elemental Component","description":"","frontmatter":{},"headers":[],"relativePath":"elemental-component/elemental-component.md"}'),p={name:"elemental-component/elemental-component.md"},o=l(`<h1 id="elemental-component" tabindex="-1">Elemental Component <a class="header-anchor" href="#elemental-component" aria-hidden="true">#</a></h1><p>Unleash the full potential of your web development with <code>ElementalComponent</code>, the foundation for all your custom components.</p><p>With a simple requirement of overriding the <code>render()</code> method, you have the flexibility to decide how you want to render your DOM. Whether you prefer to use the regular DOM or the powerful <code>shadow</code> DOM, <code>ElementalComponent</code> gives you the freedom to create the perfect user experience.</p><p>Once connected, the <code>render()</code> method will be called, providing a centralized location for all your DOM rendering needs. This ensures your code is organized and easy to maintain, while giving you the flexibility to create dynamic and engaging user interfaces. ðŸš€</p><h2 id="class-signature" tabindex="-1">Class Signature <a class="header-anchor" href="#class-signature" aria-hidden="true">#</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki slack-dark vp-code-dark"><code><span class="line"><span style="color:#569CD6;">abstract</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">class</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ElementalComponent</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">extends</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">HTMLElement</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">implements</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">EventController</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">constructor</span><span style="color:#E6E6E6;">(</span><span style="color:#569CD6;">private</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">readonly</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ElementalComponentOptions</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> {}) {</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#569CD6;">super</span><span style="color:#E6E6E6;">();</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#6A9955;">// constructor</span></span>
<span class="line"><span style="color:#E6E6E6;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#6A9955;">// child classes must override the render method</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">protected</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">abstract</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">render</span><span style="color:#E6E6E6;">()</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">void</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">public</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">raiseEvent</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">string</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">?:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">EventOptions</span><span style="color:#E6E6E6;">)</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">void</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">public</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">raiseEvent</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">string</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">isCustom</span><span style="color:#D4D4D4;">?:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">boolean</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">?:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">EventOptions</span><span style="color:#E6E6E6;">)</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">void</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">public</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">raiseEvent</span><span style="color:#E6E6E6;">&lt;</span><span style="color:#4EC9B0;">Payload</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">undefined</span><span style="color:#E6E6E6;">&gt;(</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">string</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#9CDCFE;">isCustom</span><span style="color:#D4D4D4;">?:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">boolean</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#9CDCFE;">payload</span><span style="color:#D4D4D4;">?:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">Payload</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">?:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">EventOptions</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">  )</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">void</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#E6E6E6;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki slack-ochin vp-code-light"><code><span class="line"><span style="color:#DA5221;">abstract</span><span style="color:#002339;"> </span><span style="color:#0991B6;">class</span><span style="color:#002339;"> </span><span style="color:#0444AC;">ElementalComponent</span><span style="color:#002339;"> </span><span style="color:#DA5221;">extends</span><span style="color:#002339;"> </span><span style="color:#B02767;">HTMLElement</span><span style="color:#002339;"> </span><span style="color:#DA5221;">implements</span><span style="color:#002339;"> </span><span style="color:#B02767;">EventController</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#0991B6;">constructor</span><span style="color:#002339;">(</span><span style="color:#DA5221;">private</span><span style="color:#002339;"> </span><span style="color:#DA5221;">readonly</span><span style="color:#002339;"> </span><span style="color:#B1108E;">options</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#0444AC;">ElementalComponentOptions</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> {}) {</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#2F86D2;">super</span><span style="color:#002339;">();</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#357B42;font-style:italic;">// constructor</span></span>
<span class="line"><span style="color:#002339;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#357B42;font-style:italic;">// child classes must override the render method</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">protected</span><span style="color:#002339;"> </span><span style="color:#DA5221;">abstract</span><span style="color:#002339;"> </span><span style="color:#7EB233;">render</span><span style="color:#002339;">()</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">void</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">public</span><span style="color:#002339;"> </span><span style="color:#7EB233;">raiseEvent</span><span style="color:#002339;">(</span><span style="color:#B1108E;">name</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">string</span><span style="color:#002339;">, </span><span style="color:#B1108E;">options</span><span style="color:#7B30D0;">?:</span><span style="color:#002339;"> </span><span style="color:#0444AC;">EventOptions</span><span style="color:#002339;">)</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">void</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">public</span><span style="color:#002339;"> </span><span style="color:#7EB233;">raiseEvent</span><span style="color:#002339;">(</span><span style="color:#B1108E;">name</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">string</span><span style="color:#002339;">, </span><span style="color:#B1108E;">isCustom</span><span style="color:#7B30D0;">?:</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">boolean</span><span style="color:#002339;">, </span><span style="color:#B1108E;">options</span><span style="color:#7B30D0;">?:</span><span style="color:#002339;"> </span><span style="color:#0444AC;">EventOptions</span><span style="color:#002339;">)</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">void</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">public</span><span style="color:#002339;"> </span><span style="color:#7EB233;">raiseEvent</span><span style="color:#002339;">&lt;</span><span style="color:#0444AC;">Payload</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">undefined</span><span style="color:#002339;">&gt;(</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#B1108E;">name</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">string</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#B1108E;">isCustom</span><span style="color:#7B30D0;">?:</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">boolean</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#B1108E;">payload</span><span style="color:#7B30D0;">?:</span><span style="color:#002339;"> </span><span style="color:#0444AC;">Payload</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#B1108E;">options</span><span style="color:#7B30D0;">?:</span><span style="color:#002339;"> </span><span style="color:#0444AC;">EventOptions</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">  )</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">void</span><span style="color:#002339;">;</span></span>
<span class="line"><span style="color:#002339;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-hidden="true">#</a></h2><p>The <code>ElementalComponent</code> constructor offers a powerful and flexible way to configure your components.</p><p>By passing an optional <code>ElementalComponentOptions</code> object to the <code>super()</code> constructor, you can customize the behavior of your component, with a range of options to choose from.</p><table><thead><tr><th>Option</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>id</td><td><code>ElementalComponentId</code></td><td>An optional <code>id</code> for the instance of the custom element.<br> An alphanumeric ID will be auto generated if one is not provided here.</td></tr><tr><td>noShadow</td><td><code>boolean</code></td><td>By default, an <code>ElementalComponent</code> is created with a shadowRoot (enclosed in a shadow DOM). However, this configuration property allows us to create an instance without a shadow DOM.</td></tr><tr><td>mode</td><td><code>ShadowRootMode</code></td><td>By default, an <code>ElementalComponent</code> is created with a shadow DOM in the &#39;open&#39; mode. However, this configuration property allows us to create one in a &#39;closed&#39; mode.</td></tr><tr><td>delegatesFocus</td><td><code>boolean</code></td><td>A boolean that, when set to true, specifies behavior that mitigates custom element issues around focusability. When a non-focusable part of the shadow DOM is clicked, the first focusable part is given focus, and the shadow host is given any available :focus styling.</td></tr><tr><td>eventHandlers</td><td><code>EventListenerRegistration[]</code></td><td>Event Listeners can be auto registered if they are configured here. Read more in the Controller section of the guide.</td></tr></tbody></table><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h2><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki slack-dark vp-code-dark"><code><span class="line"><span style="color:#6A9955;">&lt;!-- template.html --&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span><span style="color:#E6E6E6;">This is a regular paragraph, defined as a stateless elemental-component.</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki slack-ochin vp-code-light"><code><span class="line"><span style="color:#357B42;font-style:italic;">&lt;!-- template.html --&gt;</span></span>
<span class="line"><span style="color:#0071CE;">&lt;</span><span style="color:#0444AC;">p</span><span style="color:#0071CE;">&gt;This is a regular paragraph, defined as a stateless elemental-component.&lt;/</span><span style="color:#0444AC;">p</span><span style="color:#0071CE;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki slack-dark vp-code-dark"><code><span class="line"><span style="color:#6A9955;">// Paragraph.ts</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">ElementalComponent</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;@sohailalam2/elemental-web&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">template</span><span style="color:#E6E6E6;"> </span><span style="color:#C586C0;">from</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;./template.html?raw&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">class</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">Paragraph</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">extends</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ElementalComponent</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">protected</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">render</span><span style="color:#E6E6E6;">()</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">void</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#6A9955;">// do nothing as all we want is to render the template</span></span>
<span class="line"><span style="color:#E6E6E6;">  }</span></span>
<span class="line"><span style="color:#E6E6E6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// Dont forget to register the component!!</span></span>
<span class="line"><span style="color:#9CDCFE;">ElementalComponent</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">register</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">Paragraph</span><span style="color:#E6E6E6;">, { </span><span style="color:#9CDCFE;">template</span><span style="color:#E6E6E6;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// Simply initialize and use it</span></span>
<span class="line"><span style="color:#9CDCFE;">document</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">body</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">appendChild</span><span style="color:#E6E6E6;">(</span><span style="color:#569CD6;">new</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">Paragraph</span><span style="color:#E6E6E6;">());</span></span>
<span class="line"></span></code></pre><pre class="shiki slack-ochin vp-code-light"><code><span class="line"><span style="color:#357B42;font-style:italic;">// Paragraph.ts</span></span>
<span class="line"><span style="color:#7B30D0;">import</span><span style="color:#002339;"> { </span><span style="color:#2F86D2;">ElementalComponent</span><span style="color:#002339;"> } </span><span style="color:#7B30D0;">from</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;@sohailalam2/elemental-web&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B30D0;">import</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">template</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">from</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;./template.html?raw&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B30D0;">export</span><span style="color:#002339;"> </span><span style="color:#0991B6;">class</span><span style="color:#002339;"> </span><span style="color:#0444AC;">Paragraph</span><span style="color:#002339;"> </span><span style="color:#DA5221;">extends</span><span style="color:#002339;"> </span><span style="color:#B02767;">ElementalComponent</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">protected</span><span style="color:#002339;"> </span><span style="color:#7EB233;">render</span><span style="color:#002339;">()</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">void</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#357B42;font-style:italic;">// do nothing as all we want is to render the template</span></span>
<span class="line"><span style="color:#002339;">  }</span></span>
<span class="line"><span style="color:#002339;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#357B42;font-style:italic;">// Dont forget to register the component!!</span></span>
<span class="line"><span style="color:#2F86D2;">ElementalComponent</span><span style="color:#002339;">.</span><span style="color:#7EB233;">register</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">Paragraph</span><span style="color:#002339;">, { </span><span style="color:#2F86D2;">template</span><span style="color:#002339;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#357B42;font-style:italic;">// Simply initialize and use it</span></span>
<span class="line"><span style="color:#2F86D2;">document</span><span style="color:#002339;">.</span><span style="color:#2F86D2;">body</span><span style="color:#002339;">.</span><span style="color:#7EB233;">appendChild</span><span style="color:#002339;">(</span><span style="color:#7B30D0;">new</span><span style="color:#002339;"> </span><span style="color:#7EB233;">Paragraph</span><span style="color:#002339;">());</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,13),e=[o];function t(r,c,y,E,i,d){return a(),n("div",null,e)}const C=s(p,[["render",t]]);export{D as __pageData,C as default};
