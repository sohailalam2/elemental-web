import{_ as s,c as n,o as a,a as p}from"./app.383c6a50.js";const u=JSON.parse('{"title":"Component Attributes","description":"","frontmatter":{},"headers":[],"relativePath":"elemental-component/component/5-attributes.md"}'),l={name:"elemental-component/component/5-attributes.md"},e=p(`<h1 id="component-attributes" tabindex="-1">Component Attributes <a class="header-anchor" href="#component-attributes" aria-hidden="true">#</a></h1><h2 id="attributes-and-properties" tabindex="-1">Attributes and Properties <a class="header-anchor" href="#attributes-and-properties" aria-hidden="true">#</a></h2><p>When a new attribute is added to the component, <code>ElementalComponent</code> automatically exposes it as a class property.</p><p>If the attribute is designated as observable by either overriding the <code>observedAttributes</code> static getter, or by using the <code>@ObservedState</code> decorator, the attribute and property will remain in sync with any data updates.</p><h2 id="observing-a-property" tabindex="-1">Observing a Property <a class="header-anchor" href="#observing-a-property" aria-hidden="true">#</a></h2><div class="danger custom-block"><p class="custom-block-title">👺 Choose only one approach</p><p>Either use <code>@ObservedState</code> or override the <code>static get observedAttributes()</code>. Do not mix and match.</p></div><h3 id="by-using-observedstate-decorator" tabindex="-1">By using <code>@ObservedState</code> decorator <a class="header-anchor" href="#by-using-observedstate-decorator" aria-hidden="true">#</a></h3><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki slack-dark vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E6E6E6;">@</span><span style="color:#9CDCFE;">Component</span></span>
<span class="line"><span style="color:#569CD6;">class</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">Hero</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">extends</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ElementalComponent</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">  @</span><span style="color:#9CDCFE;">ObservedState</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">private</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">superpower</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;unknown&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#6A9955;">// rest of the code ommitted for brevity...</span></span>
<span class="line"><span style="color:#E6E6E6;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki slack-ochin vp-code-light" tabindex="0"><code><span class="line"><span style="color:#002339;">@</span><span style="color:#2F86D2;">Component</span></span>
<span class="line"><span style="color:#0991B6;">class</span><span style="color:#002339;"> </span><span style="color:#0444AC;">Hero</span><span style="color:#002339;"> </span><span style="color:#DA5221;">extends</span><span style="color:#002339;"> </span><span style="color:#B02767;">ElementalComponent</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">  @</span><span style="color:#2F86D2;">ObservedState</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">private</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">superpower</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;unknown&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#357B42;font-style:italic;">// rest of the code ommitted for brevity...</span></span>
<span class="line"><span style="color:#002339;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="by-overriding-the-static-observedattributes-getter" tabindex="-1">By Overriding the static <code>observedAttributes</code> getter <a class="header-anchor" href="#by-overriding-the-static-observedattributes-getter" aria-hidden="true">#</a></h3><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki slack-dark vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E6E6E6;">@</span><span style="color:#9CDCFE;">Component</span></span>
<span class="line"><span style="color:#569CD6;">class</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">Hero</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">extends</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ElementalComponent</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">static</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">get</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">observedAttributes</span><span style="color:#E6E6E6;">() {</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#C586C0;">return</span><span style="color:#E6E6E6;"> [</span><span style="color:#CE9178;">&#39;superpower&#39;</span><span style="color:#E6E6E6;">];</span></span>
<span class="line"><span style="color:#E6E6E6;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">private</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">superpower</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;unknown&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#6A9955;">// rest of the code ommitted for brevity...</span></span>
<span class="line"><span style="color:#E6E6E6;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki slack-ochin vp-code-light" tabindex="0"><code><span class="line"><span style="color:#002339;">@</span><span style="color:#2F86D2;">Component</span></span>
<span class="line"><span style="color:#0991B6;">class</span><span style="color:#002339;"> </span><span style="color:#0444AC;">Hero</span><span style="color:#002339;"> </span><span style="color:#DA5221;">extends</span><span style="color:#002339;"> </span><span style="color:#B02767;">ElementalComponent</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">static</span><span style="color:#002339;"> </span><span style="color:#0991B6;">get</span><span style="color:#002339;"> </span><span style="color:#7EB233;">observedAttributes</span><span style="color:#002339;">() {</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#7B30D0;">return</span><span style="color:#002339;"> [</span><span style="color:#A44185;">&#39;superpower&#39;</span><span style="color:#002339;">];</span></span>
<span class="line"><span style="color:#002339;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">private</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">superpower</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;unknown&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#357B42;font-style:italic;">// rest of the code ommitted for brevity...</span></span>
<span class="line"><span style="color:#002339;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="updating-an-observed-property" tabindex="-1">Updating an Observed Property <a class="header-anchor" href="#updating-an-observed-property" aria-hidden="true">#</a></h2><p><code>ElementalComponent</code> overrides the <code>attributeChangedCallback(...)</code> lifecycle hook to listen to property changes and these changes are triggered only when the attribute value is updated via the native <code>setAttribute(...)</code> API.</p><p>Hence, the correct way to update an observed property is to call the <code>this.setAttribute(&#39;property-name&#39;, &#39;property-value&#39;);</code> API.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h2><p>In the following example, note that there are three attributes used in the HTML code. <code>id</code>, <code>name</code>, and <code>superpower</code>. Only <code>superpower</code> attribute is made an observable.</p><p>When the <code>superpower</code> attribute change is detected, the corresponding class property <code>this.superpower</code> also gets updated.</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki slack-dark vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#6A9955;">&lt;!-- somewhere in index.html --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">el-hero</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">id</span><span style="color:#E6E6E6;">=</span><span style="color:#CE9178;">&quot;one&quot;</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">name</span><span style="color:#E6E6E6;">=</span><span style="color:#CE9178;">&quot;Superman&quot;</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">superpower</span><span style="color:#E6E6E6;">=</span><span style="color:#CE9178;">&quot;Laser Eyes&quot;</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">el-hero</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki slack-ochin vp-code-light" tabindex="0"><code><span class="line"><span style="color:#357B42;font-style:italic;">&lt;!-- somewhere in index.html --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0071CE;">&lt;</span><span style="color:#0444AC;">el-hero</span><span style="color:#0071CE;"> </span><span style="color:#DF8618;font-style:italic;">id</span><span style="color:#0071CE;">=</span><span style="color:#A44185;">&quot;one&quot;</span><span style="color:#0071CE;"> </span><span style="color:#DF8618;font-style:italic;">name</span><span style="color:#0071CE;">=</span><span style="color:#A44185;">&quot;Superman&quot;</span><span style="color:#0071CE;"> </span><span style="color:#DF8618;font-style:italic;">superpower</span><span style="color:#0071CE;">=</span><span style="color:#A44185;">&quot;Laser Eyes&quot;</span><span style="color:#0071CE;">&gt;&lt;/</span><span style="color:#0444AC;">el-hero</span><span style="color:#0071CE;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki slack-dark vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">Component</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">ElementalComponent</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">ObservedState</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;@sohailalam2/elemental-web&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">@</span><span style="color:#9CDCFE;">Component</span></span>
<span class="line"><span style="color:#569CD6;">class</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">Hero</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">extends</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ElementalComponent</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">private</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">name</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;unknown&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">  @</span><span style="color:#9CDCFE;">ObservedState</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">private</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">superpower</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;unknown&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">protected</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">render</span><span style="color:#E6E6E6;">() {</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#569CD6;">this</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">$root</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">innerHTML</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">\`</span></span>
<span class="line"><span style="color:#CE9178;">        &lt;p&gt;I am </span><span style="color:#569CD6;">\${</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> and I have </span><span style="color:#569CD6;">\${</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">superpower</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&lt;/p&gt;</span></span>
<span class="line"><span style="color:#CE9178;">    \`</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#E6E6E6;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">protected</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">connectedCallback</span><span style="color:#E6E6E6;">() {</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#569CD6;">super</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">connectedCallback</span><span style="color:#E6E6E6;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#6A9955;">// simulating an update after 2 seconds</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#DCDCAA;">setTimeout</span><span style="color:#E6E6E6;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">      </span><span style="color:#6A9955;">// ✅ Correct way, will auto update the DOM</span></span>
<span class="line"><span style="color:#E6E6E6;">      </span><span style="color:#569CD6;">this</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">setAttribute</span><span style="color:#E6E6E6;">(</span><span style="color:#CE9178;">&#39;superpower&#39;</span><span style="color:#E6E6E6;">, </span><span style="color:#CE9178;">&#39;XRay Vision&#39;</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">      </span><span style="color:#6A9955;">// ❌ Wrong way... this will not update the DOM</span></span>
<span class="line"><span style="color:#E6E6E6;">      </span><span style="color:#569CD6;">this</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">superpower</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;Super Hearing&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#E6E6E6;">    }, </span><span style="color:#B5CEA8;">2000</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"><span style="color:#E6E6E6;">  }</span></span>
<span class="line"><span style="color:#E6E6E6;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki slack-ochin vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7B30D0;">import</span><span style="color:#002339;"> { </span><span style="color:#2F86D2;">Component</span><span style="color:#002339;">, </span><span style="color:#2F86D2;">ElementalComponent</span><span style="color:#002339;">, </span><span style="color:#2F86D2;">ObservedState</span><span style="color:#002339;"> } </span><span style="color:#7B30D0;">from</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;@sohailalam2/elemental-web&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">@</span><span style="color:#2F86D2;">Component</span></span>
<span class="line"><span style="color:#0991B6;">class</span><span style="color:#002339;"> </span><span style="color:#0444AC;">Hero</span><span style="color:#002339;"> </span><span style="color:#DA5221;">extends</span><span style="color:#002339;"> </span><span style="color:#B02767;">ElementalComponent</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">private</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">name</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;unknown&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">  @</span><span style="color:#2F86D2;">ObservedState</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">private</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">superpower</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;unknown&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">protected</span><span style="color:#002339;"> </span><span style="color:#7EB233;">render</span><span style="color:#002339;">() {</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#000000;">this</span><span style="color:#002339;">.</span><span style="color:#2F86D2;">$root</span><span style="color:#002339;">.</span><span style="color:#2F86D2;">innerHTML</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#A44185;">\`</span></span>
<span class="line"><span style="color:#A44185;">        &lt;p&gt;I am \${</span><span style="color:#000000;">this</span><span style="color:#A44185;">.</span><span style="color:#2F86D2;">name</span><span style="color:#A44185;">} and I have \${</span><span style="color:#000000;">this</span><span style="color:#A44185;">.</span><span style="color:#2F86D2;">superpower</span><span style="color:#A44185;">}&lt;/p&gt;</span></span>
<span class="line"><span style="color:#A44185;">    \`</span><span style="color:#002339;">;</span></span>
<span class="line"><span style="color:#002339;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">protected</span><span style="color:#002339;"> </span><span style="color:#7EB233;">connectedCallback</span><span style="color:#002339;">() {</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#2F86D2;">super</span><span style="color:#002339;">.</span><span style="color:#7EB233;">connectedCallback</span><span style="color:#002339;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#357B42;font-style:italic;">// simulating an update after 2 seconds</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#7EB233;">setTimeout</span><span style="color:#002339;">(() </span><span style="color:#0991B6;">=&gt;</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">      </span><span style="color:#357B42;font-style:italic;">// ✅ Correct way, will auto update the DOM</span></span>
<span class="line"><span style="color:#002339;">      </span><span style="color:#000000;">this</span><span style="color:#002339;">.</span><span style="color:#7EB233;">setAttribute</span><span style="color:#002339;">(</span><span style="color:#A44185;">&#39;superpower&#39;</span><span style="color:#002339;">, </span><span style="color:#A44185;">&#39;XRay Vision&#39;</span><span style="color:#002339;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">      </span><span style="color:#357B42;font-style:italic;">// ❌ Wrong way... this will not update the DOM</span></span>
<span class="line"><span style="color:#002339;">      </span><span style="color:#000000;">this</span><span style="color:#002339;">.</span><span style="color:#2F86D2;">superpower</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;Super Hearing&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"><span style="color:#002339;">    }, </span><span style="color:#174781;">2000</span><span style="color:#002339;">);</span></span>
<span class="line"><span style="color:#002339;">  }</span></span>
<span class="line"><span style="color:#002339;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div>`,18),o=[e];function t(r,c,y,i,E,d){return a(),n("div",null,o)}const C=s(l,[["render",t]]);export{u as __pageData,C as default};
