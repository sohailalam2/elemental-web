import{_ as s,c as e,o as n,a}from"./app.2753a8df.js";const h=JSON.parse('{"title":"Elemental Component","description":"","frontmatter":{},"headers":[],"relativePath":"elemental-component/index.md"}'),l={name:"elemental-component/index.md"},o=a(`<h1 id="elemental-component" tabindex="-1">Elemental Component <a class="header-anchor" href="#elemental-component" aria-hidden="true">#</a></h1><blockquote><p>Your regular HTMLElement (aka. Web Component) but on steroid üí™</p></blockquote><p>Empower your web development with advanced custom elements üöÄ</p><h2 id="‚úÖ-features" tabindex="-1">‚úÖ Features <a class="header-anchor" href="#‚úÖ-features" aria-hidden="true">#</a></h2><ul><li><strong>No DSL</strong> (Domain Specific Language) to learn... Use the regular JS &amp; DOM APIs</li><li>Create and manage <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements" target="_blank" rel="noreferrer">custom elements</a> with ease using <code>ElementalComponent</code></li><li>Streamline <strong>state management</strong> with <code>StatefulElementalComponent</code> and <a href="https://abu.sohailalam.in/data-helpers/value-object/index" target="_blank" rel="noreferrer">ValueObjects</a></li><li>Flexibility to use the regular DOM or the powerful <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM" target="_blank" rel="noreferrer">Shadow DOM</a></li><li>Create reusable and inheritable <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template" target="_blank" rel="noreferrer">HTML Templates</a> for your components</li><li>Supports <a href="./examples/3-inheritance">Inheritance</a> - Inherit and extend functionalities from parent elements with ease</li><li>Manage native and <a href="https://developer.mozilla.org/en-US/docs/Web/Events/Creating_and_triggering_events" target="_blank" rel="noreferrer">custom events</a> with ease</li><li><strong>Supports Decorators</strong> to reduce boilerplate code and make life even simpler</li><li>And much more fun üòÉ</li></ul><h2 id="‚úçÔ∏è-basic-usage" tabindex="-1">‚úçÔ∏è Basic Usage <a class="header-anchor" href="#‚úçÔ∏è-basic-usage" aria-hidden="true">#</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki slack-dark vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">Component</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">ElementalComponent</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;@sohailalam2/elemental-web&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">@</span><span style="color:#DCDCAA;">Component</span><span style="color:#E6E6E6;">()</span></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">class</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">Paragraph</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">extends</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ElementalComponent</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">protected</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">render</span><span style="color:#E6E6E6;">()</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">void</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#6A9955;">// do something with the dom</span></span>
<span class="line"><span style="color:#E6E6E6;">  }</span></span>
<span class="line"><span style="color:#E6E6E6;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki slack-ochin vp-code-light" tabindex="0"><code><span class="line"><span style="color:#7B30D0;">import</span><span style="color:#002339;"> { </span><span style="color:#2F86D2;">Component</span><span style="color:#002339;">, </span><span style="color:#2F86D2;">ElementalComponent</span><span style="color:#002339;"> } </span><span style="color:#7B30D0;">from</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;@sohailalam2/elemental-web&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">@</span><span style="color:#7EB233;">Component</span><span style="color:#002339;">()</span></span>
<span class="line"><span style="color:#7B30D0;">export</span><span style="color:#002339;"> </span><span style="color:#0991B6;">class</span><span style="color:#002339;"> </span><span style="color:#0444AC;">Paragraph</span><span style="color:#002339;"> </span><span style="color:#DA5221;">extends</span><span style="color:#002339;"> </span><span style="color:#B02767;">ElementalComponent</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">protected</span><span style="color:#002339;"> </span><span style="color:#7EB233;">render</span><span style="color:#002339;">()</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">void</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#357B42;font-style:italic;">// do something with the dom</span></span>
<span class="line"><span style="color:#002339;">  }</span></span>
<span class="line"><span style="color:#002339;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,7),p=[o];function t(r,c,i,m,d,E){return n(),e("div",null,p)}const u=s(l,[["render",t]]);export{h as __pageData,u as default};
