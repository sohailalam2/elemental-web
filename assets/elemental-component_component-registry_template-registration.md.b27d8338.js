import{_ as s,c as n,o as a,a as e}from"./app.3f1c6235.js";const u=JSON.parse('{"title":"Template Registration","description":"","frontmatter":{},"headers":[],"relativePath":"elemental-component/component-registry/template-registration.md"}'),l={name:"elemental-component/component-registry/template-registration.md"},t=e(`<h1 id="template-registration" tabindex="-1">Template Registration <a class="header-anchor" href="#template-registration" aria-hidden="true">#</a></h1><h2 id="register-a-template" tabindex="-1">Register a Template <a class="header-anchor" href="#register-a-template" aria-hidden="true">#</a></h2><p>There are multiple ways of registering an HTML template for a component:</p><ul><li>You can literally define all templates in your <code>index.html</code> file for instance, using the <code>&lt;template&gt;...&lt;/template&gt;</code> tags</li><li>You can also programmatically use <code>document.createElement()</code> to create the template</li><li>OR you could use <code>ElementalComponentRegistry</code>&#39;s helper method to do the same</li></ul><div class="tip custom-block"><p class="custom-block-title">\u{1F481} Auto Generated Template ID</p><p>All templates registered using <code>ElementalComponentRegistry</code> will end up receiving the same id as the custom component&#39;s tag-name</p></div><h3 id="method-signature" tabindex="-1">Method Signature <a class="header-anchor" href="#method-signature" aria-hidden="true">#</a></h3><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C586C0;">export</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">class</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ElementalComponentRegistry</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">public</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">static</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">registerTemplate</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">element</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">Class</span><span style="color:#E6E6E6;">&lt;</span><span style="color:#4EC9B0;">HTMLElement</span><span style="color:#E6E6E6;">&gt;, </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">?:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">RegistrationOptions</span><span style="color:#E6E6E6;">)</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">void</span><span style="color:#E6E6E6;"> {}</span></span>
<span class="line"><span style="color:#E6E6E6;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#7B30D0;">export</span><span style="color:#002339;"> </span><span style="color:#0991B6;">class</span><span style="color:#002339;"> </span><span style="color:#0444AC;">ElementalComponentRegistry</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">public</span><span style="color:#002339;"> </span><span style="color:#DA5221;">static</span><span style="color:#002339;"> </span><span style="color:#7EB233;">registerTemplate</span><span style="color:#002339;">(</span><span style="color:#B1108E;">element</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#0444AC;">Class</span><span style="color:#002339;">&lt;</span><span style="color:#0444AC;">HTMLElement</span><span style="color:#002339;">&gt;, </span><span style="color:#B1108E;">options</span><span style="color:#7B30D0;">?:</span><span style="color:#002339;"> </span><span style="color:#0444AC;">RegistrationOptions</span><span style="color:#002339;">)</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">void</span><span style="color:#002339;"> {}</span></span>
<span class="line"><span style="color:#002339;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h3><h4 id="registering-with-default-prefix-el" tabindex="-1">Registering with default prefix <code>el</code> <a class="header-anchor" href="#registering-with-default-prefix-el" aria-hidden="true">#</a></h4><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#6A9955;">// Here the given template string gets registered as a \`ButtonCounter\`</span></span>
<span class="line"><span style="color:#6A9955;">// template with an id \`el-button-counter\`. You can see that in the beginning</span></span>
<span class="line"><span style="color:#6A9955;">// of the document body as \`&lt;template id=&quot;el-button-counter&quot;&gt;...&lt;/template&gt;\`</span></span>
<span class="line"><span style="color:#9CDCFE;">ElementalComponentRegistry</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">registerTemplate</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">ButtonCounter</span><span style="color:#E6E6E6;">, {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">template:</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">\`&lt;button&gt;Click Me&lt;/button&gt;\`</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#357B42;">// Here the given template string gets registered as a \`ButtonCounter\`</span></span>
<span class="line"><span style="color:#357B42;">// template with an id \`el-button-counter\`. You can see that in the beginning</span></span>
<span class="line"><span style="color:#357B42;">// of the document body as \`&lt;template id=&quot;el-button-counter&quot;&gt;...&lt;/template&gt;\`</span></span>
<span class="line"><span style="color:#2F86D2;">ElementalComponentRegistry</span><span style="color:#002339;">.</span><span style="color:#7EB233;">registerTemplate</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">ButtonCounter</span><span style="color:#002339;">, {</span></span>
<span class="line"><span style="color:#002339;">  template: </span><span style="color:#A44185;">\`&lt;button&gt;Click Me&lt;/button&gt;\`</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="registering-with-custom-prefix" tabindex="-1">Registering with custom prefix <a class="header-anchor" href="#registering-with-custom-prefix" aria-hidden="true">#</a></h4><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#6A9955;">// Here the given template string gets registered as a \`ButtonCounter\`</span></span>
<span class="line"><span style="color:#6A9955;">// template with an id \`awesome-button-counter\`.</span></span>
<span class="line"><span style="color:#6A9955;">// You can see that in the beginning of the document body as</span></span>
<span class="line"><span style="color:#6A9955;">// \`&lt;template id=&quot;awesome-button-counter&quot;&gt;...&lt;/template&gt;\`</span></span>
<span class="line"><span style="color:#9CDCFE;">ElementalComponentRegistry</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">registerTemplate</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">ButtonCounter</span><span style="color:#E6E6E6;">, {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">template:</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">\`&lt;button&gt;Click Me&lt;/button&gt;\`</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">prefix:</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">ElementalComponentPrefix</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">from</span><span style="color:#E6E6E6;">(</span><span style="color:#CE9178;">&#39;awesome&#39;</span><span style="color:#E6E6E6;">),</span></span>
<span class="line"><span style="color:#E6E6E6;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#357B42;">// Here the given template string gets registered as a \`ButtonCounter\`</span></span>
<span class="line"><span style="color:#357B42;">// template with an id \`awesome-button-counter\`.</span></span>
<span class="line"><span style="color:#357B42;">// You can see that in the beginning of the document body as</span></span>
<span class="line"><span style="color:#357B42;">// \`&lt;template id=&quot;awesome-button-counter&quot;&gt;...&lt;/template&gt;\`</span></span>
<span class="line"><span style="color:#2F86D2;">ElementalComponentRegistry</span><span style="color:#002339;">.</span><span style="color:#7EB233;">registerTemplate</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">ButtonCounter</span><span style="color:#002339;">, {</span></span>
<span class="line"><span style="color:#002339;">  template: </span><span style="color:#A44185;">\`&lt;button&gt;Click Me&lt;/button&gt;\`</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">  prefix: </span><span style="color:#2F86D2;">ElementalComponentPrefix</span><span style="color:#002339;">.</span><span style="color:#7EB233;">from</span><span style="color:#002339;">(</span><span style="color:#A44185;">&#39;awesome&#39;</span><span style="color:#002339;">),</span></span>
<span class="line"><span style="color:#002339;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">\u{1F481} Register template for any <code>HTMLElement</code></p><p>Not so surprising is that you can use the <code>registerTemplate()</code> method to register a template string for <em>any</em> <code>HTMLElement</code> and not necessarily restricted to using <code>ElementalComponent</code> and you will still benefit from its usage \u{1F604}</p></div><h4 id="copying-an-existing-template-while-registering-a-component" tabindex="-1">Copying an existing template while registering a component <a class="header-anchor" href="#copying-an-existing-template-while-registering-a-component" aria-hidden="true">#</a></h4><p>Let&#39;s say we already have a template registered in the DOM with an id of <code>custom-template</code>. If we choose to create an element that uses this existing template instead, then we can simply pass the <code>templateId</code> during the registration of the component and its content will be copied into a new template.</p><p>If no such template is found, an <code>ElementalComponentNoSuchTemplateFoundException</code> will be thrown.</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#9CDCFE;">ElementalComponentRegistry</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">register</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">ButtonCounter</span><span style="color:#E6E6E6;">, { </span><span style="color:#9CDCFE;">templateId:</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">\`some-template-id\`</span><span style="color:#E6E6E6;"> });</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#2F86D2;">ElementalComponentRegistry</span><span style="color:#002339;">.</span><span style="color:#7EB233;">register</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">ButtonCounter</span><span style="color:#002339;">, { templateId: </span><span style="color:#A44185;">\`some-template-id\`</span><span style="color:#002339;"> });</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">It&#39;s a copy not a reference</p><p>If a <code>templateId</code> is provided and a template with such an id already exists, then the registry will try to copy its content into a new template element which will then be registered for the given component.</p></div><h4 id="registering-a-component-with-a-template-and-styles" tabindex="-1">Registering a component with a template and styles <a class="header-anchor" href="#registering-a-component-with-a-template-and-styles" aria-hidden="true">#</a></h4><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">template</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">\`&lt;button&gt;MyButton&lt;/button&gt;\`</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">styles</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">\`:host { padding: 0; margin: 0; }\`</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">ElementalComponentRegistry</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">registerTemplate</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">ButtonCounter</span><span style="color:#E6E6E6;">, { </span><span style="color:#9CDCFE;">template</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">styles</span><span style="color:#E6E6E6;"> });</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#0991B6;">const</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">template</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#A44185;">\`&lt;button&gt;MyButton&lt;/button&gt;\`</span><span style="color:#002339;">;</span></span>
<span class="line"><span style="color:#0991B6;">const</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">styles</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#A44185;">\`:host { padding: 0; margin: 0; }\`</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#2F86D2;">ElementalComponentRegistry</span><span style="color:#002339;">.</span><span style="color:#7EB233;">registerTemplate</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">ButtonCounter</span><span style="color:#002339;">, { </span><span style="color:#2F86D2;">template</span><span style="color:#002339;">, </span><span style="color:#2F86D2;">styles</span><span style="color:#002339;"> });</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="check-if-template-is-registered" tabindex="-1">Check if template is registered <a class="header-anchor" href="#check-if-template-is-registered" aria-hidden="true">#</a></h2><p><code>ElementalComponentRegistry</code> exposes the following helper methods to check whether a component template has been registered or not.</p><h3 id="method-signatures" tabindex="-1">Method Signatures <a class="header-anchor" href="#method-signatures" aria-hidden="true">#</a></h3><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C586C0;">export</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">class</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ElementalComponentRegistry</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#6A9955;">// This checks the registry&#39;s storage and will only return a \`true\`</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#6A9955;">// if the template was registered using the Registry</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">public</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">static</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">isTemplateRegistered</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">element</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">Class</span><span style="color:#E6E6E6;">&lt;</span><span style="color:#4EC9B0;">HTMLElement</span><span style="color:#E6E6E6;">&gt;)</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">boolean</span><span style="color:#E6E6E6;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#6A9955;">// This checks the DOM directly and bypasses the registry</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#6A9955;">// A template that may have be declred in the HTML DOM and not have been</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#6A9955;">// registered with \`ElementalComponentRegistry\`, this will still return \`true\`</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">public</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">static</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">isTemplateRegisteredByTagName</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">tagName</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">string</span><span style="color:#E6E6E6;">)</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">boolean</span><span style="color:#E6E6E6;"> {}</span></span>
<span class="line"><span style="color:#E6E6E6;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#7B30D0;">export</span><span style="color:#002339;"> </span><span style="color:#0991B6;">class</span><span style="color:#002339;"> </span><span style="color:#0444AC;">ElementalComponentRegistry</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#357B42;">// This checks the registry&#39;s storage and will only return a \`true\`</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#357B42;">// if the template was registered using the Registry</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">public</span><span style="color:#002339;"> </span><span style="color:#DA5221;">static</span><span style="color:#002339;"> </span><span style="color:#7EB233;">isTemplateRegistered</span><span style="color:#002339;">(</span><span style="color:#B1108E;">element</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#0444AC;">Class</span><span style="color:#002339;">&lt;</span><span style="color:#0444AC;">HTMLElement</span><span style="color:#002339;">&gt;)</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">boolean</span><span style="color:#002339;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#357B42;">// This checks the DOM directly and bypasses the registry</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#357B42;">// A template that may have be declred in the HTML DOM and not have been</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#357B42;">// registered with \`ElementalComponentRegistry\`, this will still return \`true\`</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">public</span><span style="color:#002339;"> </span><span style="color:#DA5221;">static</span><span style="color:#002339;"> </span><span style="color:#7EB233;">isTemplateRegisteredByTagName</span><span style="color:#002339;">(</span><span style="color:#B1108E;">tagName</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">string</span><span style="color:#002339;">)</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">boolean</span><span style="color:#002339;"> {}</span></span>
<span class="line"><span style="color:#002339;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,24),p=[t];function o(r,c,i,y,E,d){return a(),n("div",null,p)}const g=s(l,[["render",o]]);export{u as __pageData,g as default};
