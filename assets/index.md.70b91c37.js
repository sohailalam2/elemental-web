import{_ as e,c as s,o as a,a as n}from"./app.17feca57.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u{1F4BB} Installation","slug":"\u{1F4BB}-installation","link":"#\u{1F4BB}-installation","children":[]},{"level":2,"title":"\u261D\uFE0F Minimum Requirements","slug":"\u261D\uFE0F-minimum-requirements","link":"#\u261D\uFE0F-minimum-requirements","children":[{"level":3,"title":"NodeJs > v16","slug":"nodejs-v16","link":"#nodejs-v16","children":[]},{"level":3,"title":"Browsers","slug":"browsers","link":"#browsers","children":[]}]},{"level":2,"title":"Debug","slug":"debug","link":"#debug","children":[]},{"level":2,"title":"\u{1F30F} Read Documentation","slug":"\u{1F30F}-read-documentation","link":"#\u{1F30F}-read-documentation","children":[]}],"relativePath":"index.md"}'),l={name:"index.md"},o=n(`<section align="center"><br><h1>Elemental Web</h1><h5>Modern web technologies in a nutshell</h5></section><h2 id="\u{1F4BB}-installation" tabindex="-1">\u{1F4BB} Installation <a class="header-anchor" href="#\u{1F4BB}-installation" aria-hidden="true">#</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ npm install @sohailalam2/elemental-web</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="\u261D\uFE0F-minimum-requirements" tabindex="-1">\u261D\uFE0F Minimum Requirements <a class="header-anchor" href="#\u261D\uFE0F-minimum-requirements" aria-hidden="true">#</a></h2><h3 id="nodejs-v16" tabindex="-1">NodeJs &gt; v16 <a class="header-anchor" href="#nodejs-v16" aria-hidden="true">#</a></h3><p><code>@sohailalam2/abu</code> uses the <code>crypto</code> module and specifically the <code>crypto.webcrypto</code> object for its random number generation. This is only available on Node v16+.</p><h4 id="failing-tests-typeerror-webcrypto" tabindex="-1">Failing Tests - TypeError <code>webcrypto</code> <a class="header-anchor" href="#failing-tests-typeerror-webcrypto" aria-hidden="true">#</a></h4><blockquote><p>My tests are failing because of a cryptic error message: <code>TypeError: Cannot read properties of undefined (reading &#39;webcrypto&#39;)</code></p></blockquote><p>Abu uses &#39;webcrypto&#39; implementation to generate random numbers that are then used by the <a href="https://sohailalam2.github.io/abu/id-generators/" target="_blank" rel="noreferrer">id-generators</a>. Unfortunately, many test environments do not provide an implementation for the same. However, we can easily define it as follows:</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// in some spec.ts file</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> crypto </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">crypto</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#A6ACCD;">(globalThis</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">crypto</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">webcrypto</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> crypto</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">webcrypto </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="browsers" tabindex="-1">Browsers <a class="header-anchor" href="#browsers" aria-hidden="true">#</a></h3><ul><li>All modern browsers</li><li>NOT Internet Explorer</li></ul><h2 id="debug" tabindex="-1">Debug <a class="header-anchor" href="#debug" aria-hidden="true">#</a></h2><p>Debug logs can be enabled by globally exposing a truthy value for <code>__ABU_DEBUG__</code></p><h2 id="\u{1F30F}-read-documentation" tabindex="-1">\u{1F30F} <a href="https://sohailalam2.github.io/abu/" target="_blank" rel="noreferrer">Read Documentation</a> <a class="header-anchor" href="#\u{1F30F}-read-documentation" aria-hidden="true">#</a></h2>`,15),r=[o];function t(i,p,c,d,u,h){return a(),s("div",null,r)}const y=e(l,[["render",t]]);export{m as __pageData,y as default};
