import{_ as s,c as a,o as n,a as e}from"./app.ee22a17e.js";const u=JSON.parse('{"title":"FAQ","description":"","frontmatter":{},"headers":[],"relativePath":"faq/index.md"}'),p={name:"faq/index.md"},o=e(`<h1 id="faq" tabindex="-1">FAQ <a class="header-anchor" href="#faq" aria-hidden="true">#</a></h1><h2 id="enable-debugging" tabindex="-1">Enable Debugging <a class="header-anchor" href="#enable-debugging" aria-hidden="true">#</a></h2><p>Debug logs can be enabled by globally exposing a truthy value for <code>__ABU_DEBUG__</code></p><h2 id="failing-tests-typeerror-webcrypto" tabindex="-1">Failing Tests - TypeError <code>webcrypto</code> <a class="header-anchor" href="#failing-tests-typeerror-webcrypto" aria-hidden="true">#</a></h2><blockquote><p>My tests are failing because of a cryptic error message: <code>TypeError: Cannot read properties of undefined (reading &#39;webcrypto&#39;)</code></p></blockquote><p>Abu uses &#39;webcrypto&#39; implementation to generate random numbers that are then used by the <a href="https://sohailalam2.github.io/abu/id-generators/" target="_blank" rel="noreferrer">id-generators</a>. Unfortunately, many test environments do not provide an implementation for the same. However, we can easily define it as follows:</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki slack-dark vp-code-dark"><code><span class="line"><span style="color:#6A9955;">// in some spec.ts file</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">crypto</span><span style="color:#E6E6E6;"> </span><span style="color:#C586C0;">from</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;crypto&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">Object</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">defineProperty</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">globalThis</span><span style="color:#E6E6E6;">, </span><span style="color:#CE9178;">&#39;crypto&#39;</span><span style="color:#E6E6E6;">, {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">value:</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">webcrypto:</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">crypto</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">webcrypto</span><span style="color:#E6E6E6;"> },</span></span>
<span class="line"><span style="color:#E6E6E6;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki slack-ochin vp-code-light"><code><span class="line"><span style="color:#357B42;font-style:italic;">// in some spec.ts file</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B30D0;">import</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">crypto</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">from</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;crypto&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#2F86D2;">Object</span><span style="color:#002339;">.</span><span style="color:#7EB233;">defineProperty</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">globalThis</span><span style="color:#002339;">, </span><span style="color:#A44185;">&#39;crypto&#39;</span><span style="color:#002339;">, {</span></span>
<span class="line"><span style="color:#002339;">  value: { webcrypto: </span><span style="color:#2F86D2;">crypto</span><span style="color:#002339;">.</span><span style="color:#2F86D2;">webcrypto</span><span style="color:#002339;"> },</span></span>
<span class="line"><span style="color:#002339;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,7),l=[o];function r(t,c,i,y,d,E){return n(),a("div",null,l)}const h=s(p,[["render",r]]);export{u as __pageData,h as default};
