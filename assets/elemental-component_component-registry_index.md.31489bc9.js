import{_ as e,c as s,o as n,a}from"./app.f6b5dcc0.js";const f=JSON.parse('{"title":"Elemental Component Registry","description":"","frontmatter":{},"headers":[],"relativePath":"elemental-component/component-registry/index.md"}'),l={name:"elemental-component/component-registry/index.md"},o=a(`<h1 id="elemental-component-registry" tabindex="-1">Elemental Component Registry <a class="header-anchor" href="#elemental-component-registry" aria-hidden="true">#</a></h1><p>The registry implementation that simplifies how we register a custom element or a template. It also exposes a bunch of other helper methods, all of which are public and static.</p><div class="info custom-block"><p class="custom-block-title">Default Prefix</p><p>The <code>ElementalComponentRegistry</code> uses the text <code>el</code> <em>(stands for elemental)</em> as the default prefix for all purposes.</p></div><h2 id="changing-the-default-prefix" tabindex="-1">Changing the default prefix <a class="header-anchor" href="#changing-the-default-prefix" aria-hidden="true">#</a></h2><p>By default, ElementalComponent will register components with a prefix <code>el</code> however, this can be changed by using the following method:</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#9CDCFE;">ElementalComponentRegistry</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">setDefaultPrefix</span><span style="color:#E6E6E6;">(</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">ElementalComponentPrefix</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">from</span><span style="color:#E6E6E6;">(</span><span style="color:#CE9178;">&#39;my&#39;</span><span style="color:#E6E6E6;">), </span><span style="color:#6A9955;">// prefix will now become \`my-\`</span></span>
<span class="line"><span style="color:#E6E6E6;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#2F86D2;">ElementalComponentRegistry</span><span style="color:#002339;">.</span><span style="color:#7EB233;">setDefaultPrefix</span><span style="color:#002339;">(</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#2F86D2;">ElementalComponentPrefix</span><span style="color:#002339;">.</span><span style="color:#7EB233;">from</span><span style="color:#002339;">(</span><span style="color:#A44185;">&#39;my&#39;</span><span style="color:#002339;">), </span><span style="color:#357B42;">// prefix will now become \`my-\`</span></span>
<span class="line"><span style="color:#002339;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,6),t=[o];function p(r,c,i,m,d,h){return n(),s("div",null,t)}const E=e(l,[["render",p]]);export{f as __pageData,E as default};
